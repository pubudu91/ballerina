<idea-plugin>
    <id>io.ballerina</id>
    <name>Ballerina</name>
    <version>1.0.0-rc1</version>
    <vendor email="ballerinalang@wso2.com" url="https://ballerina.io/">BallerinaLang</vendor>

    <description><![CDATA[
      <a href="https://ballerina.io/">Ballerina</a> is a simple programming language whose syntax and runtime address the hard problems of integration. As a Turing complete language, Ballerina enables agility with edit, build, and run cycles. Ballerina code is compiled into services that include transactions, embedded brokers and gateway runtimes.
    ]]></description>

    <change-notes><![CDATA[
      <ul>
        <li> Added plugin support for latest constant expression related changes. </li>
        <li> Added debugger related fixes and improvements. </li>
      </ul>
    ]]>
    </change-notes>
    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="182"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="java-deps.xml">com.intellij.modules.java</depends>

    <extensionPoints>
        <extensionPoint
                interface="io.ballerina.plugins.idea.webview.diagram.preview.HtmlPanelProvider"
                name="html.panel.provider"/>
    </extensionPoints>

    <module-components>
        <component>
            <implementation-class>
                io.ballerina.plugins.idea.project.BallerinaModuleLibrariesInitializer
            </implementation-class>
        </component>
    </module-components>

    <extensions defaultExtensionNs="com.intellij">

        <!--Language Server Based extensions-->
        <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"
                                id="LSPCompletionContributor" language="Ballerina"/>

        <externalAnnotator implementationClass="org.wso2.lsp4intellij.contributors.annotator.LSPAnnotator"
                           id="BallerinaLSPAnnotator" language="Ballerina"/>

        <renameHandler implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameHandler"
                       id="LSPRenameHandler" order="first"/>

        <renamePsiElementProcessor implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameProcessor"
                                   id="LSPRenameProcessor" order="first"/>

        <typedHandler implementation="org.wso2.lsp4intellij.listeners.LSPTypedHandler"
                      id="BallerinaLspTypedHandler"/>

        <!--Ballerina plugin extensions-->
        <fileTypeFactory implementation="io.ballerina.plugins.idea.BallerinaFileTypeFactory"/>

        <lang.parserDefinition language="Ballerina"
                               implementationClass="io.ballerina.plugins.idea.BallerinaParserDefinition"/>

        <lang.ast.factory language="Ballerina"
                          implementationClass="io.ballerina.plugins.idea.BallerinaASTFactory"/>

        <lang.commenter language="Ballerina" implementationClass="io.ballerina.plugins.idea.BallerinaCommenter"/>

        <lang.syntaxHighlighterFactory language="Ballerina"
                                       implementationClass="io.ballerina.plugins.idea.highlighting.syntax.BallerinaSyntaxHighlighterFactory"/>

        <fileEditorProvider
                implementation="io.ballerina.plugins.idea.webview.diagram.preview.BallerinaSplitEditorProvider"/>

        <indexPatternBuilder implementation="io.ballerina.plugins.idea.BallerinaIndexPatternBuilder"/>

        <codeInsight.lineMarkerProvider language="Ballerina"
                                        implementationClass="io.ballerina.plugins.idea.marker.BallerinaTypeFunctionMarker"/>

        <lang.elementManipulator forClass="io.ballerina.plugins.idea.psi.BallerinaCompletePackageName"
                                 implementationClass="io.ballerina.plugins.idea.psi.manipulator.BallerinaPackageManipulator"/>

        <spellchecker.support language="Ballerina"
                              implementationClass="io.ballerina.plugins.idea.spellchecker.BallerinaSpellcheckingStrategy"/>

        <annotator language="Ballerina"
                   implementationClass="io.ballerina.plugins.idea.highlighting.semantic.BallerinaAnnotator"/>

        <highlightErrorFilter implementation="io.ballerina.plugins.idea.BallerinaHighlightErrorFilter"
                              id="BallerinaHighlightErrorFilter"/>

        <!-- file templates -->
        <internalFileTemplate name="Ballerina File"/>
        <internalFileTemplate name="Ballerina Main"/>

        <lang.braceMatcher language="Ballerina"
                           implementationClass="io.ballerina.plugins.idea.editor.BallerinaPairedBraceMatcher"/>

        <!--folding builder-->
        <lang.foldingBuilder language="Ballerina"
                             implementationClass="io.ballerina.plugins.idea.editor.BallerinaFoldingBuilder"/>

        <codeStyleSettingsProvider
                implementation="io.ballerina.plugins.idea.formatter.settings.BallerinaCodeStyleSettingsProvider"/>

        <langCodeStyleSettingsProvider
                implementation="io.ballerina.plugins.idea.formatter.settings.BallerinaLanguageCodeStyleSettingsProvider"/>

        <quoteHandler fileType="Ballerina file"
                      className="io.ballerina.plugins.idea.editor.BallerinaQuoteHandler"/>

        <!-- Enter Handlers-->
        <enterHandlerDelegate order="last"
                              implementation="io.ballerina.plugins.idea.formatter.BallerinaEnterBetweenBracesHandler"/>
        <enterHandlerDelegate
                implementation="io.ballerina.plugins.idea.formatter.BallerinaEnterInDocumentationHandler"/>

        <!-- Backspace Handlers-->
        <backspaceHandlerDelegate id="BallerinaBackspaceHandler" order="first"
                                  implementation="io.ballerina.plugins.idea.formatter.BallerinaIndentingBackspaceHandler"/>

        <!-- sdk -->
        <sdkType implementation="io.ballerina.plugins.idea.sdk.BallerinaSdkType"/>

        <library.presentationProvider
                implementation="io.ballerina.plugins.idea.sdk.BallerinaSdkLibraryPresentationProvider"/>
        <applicationService serviceImplementation="io.ballerina.plugins.idea.sdk.BallerinaPathModificationTracker"/>

        <projectService serviceInterface="io.ballerina.plugins.idea.sdk.BallerinaSdkService"
                        serviceImplementation="io.ballerina.plugins.idea.sdk.BallerinaSmallIDEsSdkService"
                        overrides="false"/>

        <editorNotificationProvider
                implementation="io.ballerina.plugins.idea.inspections.WrongSdkConfigurationNotificationProvider"/>

        <editorNotificationProvider
                implementation="io.ballerina.plugins.idea.inspections.VersionMismatchNotificationProvider"/>

        <!-- module -->
        <moduleType id="BALLERINA_MODULE" implementationClass="io.ballerina.plugins.idea.BallerinaModuleType"/>
        <moduleConfigurationEditorProvider
                implementation="io.ballerina.plugins.idea.configuration.BallerinaModuleEditorsProvider"
                order="first"/>
        <editorNotificationProvider
                implementation="io.ballerina.plugins.idea.inspections.WrongModuleTypeNotificationProvider"/>

        <!-- run application -->
        <programRunner id="ballerinaRunner" implementation="io.ballerina.plugins.idea.runconfig.BallerinaRunner"/>
        <configurationType
                implementation="io.ballerina.plugins.idea.runconfig.application.BallerinaApplicationRunConfigurationType"/>
        <runConfigurationProducer
                implementation="io.ballerina.plugins.idea.runconfig.application.BallerinaApplicationRunConfigurationProducer"/>
        <runLineMarkerContributor language="Ballerina"
                                  implementationClass="io.ballerina.plugins.idea.runconfig.BallerinaRunLineMarkerProvider"/>
        <!--Todo - Enable after adding support-->
        <!--<runLineMarkerContributor language="Ballerina"-->
        <!--implementationClass="org.ballerinalang.plugins.idea.runconfig.BallerinaTestLineMarkerProvider"/>-->
        <console.folding implementation="io.ballerina.plugins.idea.runconfig.BallerinaConsoleFolding"/>

        <!--remote-->
        <configurationType
                implementation="io.ballerina.plugins.idea.runconfig.remote.BallerinaRemoteRunConfigurationType"/>
        <runConfigurationProducer
                implementation="io.ballerina.plugins.idea.runconfig.remote.BallerinaRemoteRunConfigurationProducer"/>

        <!-- debugger -->
        <programRunner id="ballerinaDebugger"
                       implementation="io.ballerina.plugins.idea.runconfig.BallerinaDebugger"/>
        <xdebugger.breakpointType
                implementation="io.ballerina.plugins.idea.debugger.breakpoint.BallerinaBreakPointType"/>

        <!--project-->
        <applicationService
                serviceImplementation="io.ballerina.plugins.idea.project.BallerinaApplicationLibrariesService"/>
        <applicationService
                serviceImplementation="io.ballerina.plugins.idea.webview.diagram.settings.DiagramApplicationSettings"/>
        <projectService
                serviceImplementation="io.ballerina.plugins.idea.project.BallerinaProjectLibrariesService"/>
        <projectConfigurable id="Ballerina" groupId="language"
                             provider="io.ballerina.plugins.idea.configuration.BallerinaConfigurableProvider"
                             dynamic="true"/>
        <projectExtension implementation="io.ballerina.plugins.idea.project.BallerinaProjectExtension"/>
        <projectStructureDetector
                implementation="io.ballerina.plugins.idea.project.BallerinaProjectStructureDetector"/>
        <directoryProjectGenerator
                implementation="io.ballerina.plugins.idea.BallerinaProjectGenerator"/> <!-- for small IDEs-->
        <applicationService
                serviceImplementation="io.ballerina.plugins.idea.settings.experimental.BallerinaExperimentalFeatureSettings"/>
        <applicationService
                serviceImplementation="io.ballerina.plugins.idea.settings.debuglogs.LangServerDebugLogsSettings"/>
        <projectService
                serviceImplementation="io.ballerina.plugins.idea.settings.autodetect.BallerinaAutoDetectionSettings"/>
        <preloadingActivity
                implementation="io.ballerina.plugins.idea.preloading.BallerinaPreloadingActivity"
                id="io.ballerina.plugins.idea.preloading.BallerinaPreloadingActivity"/>
    </extensions>

    <extensions defaultExtensionNs="io.ballerina">
        <html.panel.provider
                implementation="io.ballerina.plugins.idea.webview.diagram.preview.javafx.JavaFxHtmlPanelProvider"/>
    </extensions>

    <actions>
        <!--Ballerina Diagram Support -->
        <group id="Diagram.Toolbar.Right" class="com.intellij.openapi.actionSystem.DefaultActionGroup"
               text="Ballerina editor layout actions">
            <action class="io.ballerina.plugins.idea.webview.diagram.actions.EditorOnlyLayoutChangeAction"
                    id="io.ballerina.plugins.idea.webview.diagram.actions.EditorOnlyLayoutChangeAction"
                    text="Show editor only"
                    description="Sets ballerina editor layout to show editor only"
                    icon="BallerinaIcons.Layout.EDITOR_ONLY">
            </action>
            <action class="io.ballerina.plugins.idea.webview.diagram.actions.EditorAndPreviewLayoutChangeAction"
                    id="io.ballerina.plugins.idea.webview.diagram.actions.EditorAndPreviewLayoutChangeAction"
                    text="Show editor and preview"
                    description="Sets ballerina editor layout to show editor and preview in split"
                    icon="BallerinaIcons.Layout.EDITOR_PREVIEW">
            </action>
            <action class="io.ballerina.plugins.idea.webview.diagram.actions.PreviewOnlyLayoutChangeAction"
                    id="io.ballerina.plugins.idea.webview.diagram.actions.PreviewOnlyLayoutChangeAction"
                    text="Show preview only"
                    description="Sets ballerina editor layout to show preview only"
                    icon="BallerinaIcons.Layout.PREVIEW_ONLY">
            </action>
        </group>
        <action id="NewBallerinaFile" class="io.ballerina.plugins.idea.actions.BallerinaCreateFileAction"
                text="Ballerina File" description="Create new Ballerina file">
            <add-to-group group-id="NewGroup" anchor="first"/>
        </action>
        <action id="NewBallerinaModule" class="io.ballerina.plugins.idea.actions.BallerinaCreateModuleAction"
                text="Ballerina Module" description="Create new Ballerina module">
            <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewBallerinaFile"/>
        </action>
        <action class="org.wso2.lsp4intellij.actions.LSPReformatAction" id="ReformatCode"
                use-shortcut-of="ReformatCode"
                overrides="true" text="Reformat Code"/>
        <action class="org.wso2.lsp4intellij.actions.LSPShowReformatDialogAction" id="ShowReformatFileDialog"
                use-shortcut-of="ShowReformatFileDialog" overrides="true" text="Show Reformat File Dialog"/>
        <action class="org.wso2.lsp4intellij.actions.LSPReferencesAction"
                id="LSPFindUsages">
            <keyboard-shortcut first-keystroke="shift alt F7" keymap="$default"/>

        </action>
    </actions>

    <application-components>
        <component>
            <implementation-class>org.wso2.lsp4intellij.IntellijLanguageClient</implementation-class>
        </component>
    </application-components>

</idea-plugin>
