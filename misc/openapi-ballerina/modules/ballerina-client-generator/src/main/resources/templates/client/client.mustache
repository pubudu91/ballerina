import ballerina/http;

//=====================================
//============Client Config============
//=====================================
public type {{name}}ClientConfig record {
    string serviceUrl;
};

//==============================
//============Client============
//==============================
public type {{name}}Client client object {
    public http:Client clientEP;
    public {{name}}ClientConfig config;

    public function __init({{name}}ClientConfig clientConfig) {
        http:Client httpEp = new(clientConfig.serviceUrl);

        self.clientEP = httpEp;
        self.config = clientConfig;
    }
    {{#resources}}{{#isMultiMethod}}{{#supportedMethods}}
    public remote function {{lower .}}{{name}}({{#parameters}}{{type}} {{name}}{{#unless @last}}, {{/unless}}{{/parameters}}) returns http:Response | error? {
        http:Client ep = self.clientEP;
        http:Request request = new;

        //Create the required request as needed{{#contentType}}
        request.setHeader("Content-Type", "{{contentType}}");{{/contentType}}
        string path = string `{{path}}`;{{#equals . "GET"}}
        return check ep->{{lower .}}(path, message = request);{{else}}{{#equals . "HEAD"}}
        return check ep->{{lower .}}(path, message = request);{{else}}{{#equals . "OPTIONS"}}
        return check ep->{{lower .}}(path, message = request);{{/equals}}{{/equals}}
        return check ep->{{lower .}}(path, request);{{/equals}}
    }
    {{/supportedMethods}}{{/isMultiMethod}}{{^isMultiMethod}}
    public remote function {{name}}({{#parameters}}{{type}} {{name}}{{#unless @last}}, {{/unless}}{{/parameters}}) returns http:Response | error? {
        http:Client ep = self.clientEP;
        http:Request request = new;

        //Create the required request as needed{{#contentType}}
        request.setHeader("Content-Type", "{{contentType}}");{{/contentType}}
        string path = string `{{path}}`;{{#equals method "GET"}}
        return check ep->{{lower method}}(path, message = request);{{else}}{{#equals method "HEAD"}}
        return check ep->{{lower method}}(path, message = request);{{else}}{{#equals method "OPTIONS"}}
        return check ep->{{lower method}}(path, message = request);{{/equals}}{{/equals}}
        return check ep->{{lower method}}(path, request);{{/equals}}
    }
    {{/isMultiMethod}}{{/resources}}
};
